// =======================
// Tools / Mixins
// =======================

/// Placeholder
///
/// @author Louis Chenais
///
/// @access public
///
/// @example scss - Usage
///   @include placeholder() {
///     color: blue;
///   }
///
/// @example css - CSS output
///   &::-webkit-input-placeholder {
///     color: blue;
///   }
///   &:-moz-placeholder {
///     color: blue;
///   }
///   &:-ms-input-placeholder {
///     color: blue;
///   }
@mixin placeholder() {
  *::-webkit-input-placeholder {
    @content;
  }
  *::-moz-placeholder {
    @content;
    // Fix placeholder opacity for Firefox
    opacity: 1;
  }
  *:-ms-input-placeholder {
    @content;
  }
  *::placeholder {
    @content;
  }
}

/// Mixin helping defining both `width` and `height` simultaneously.
///
/// @author Hugo Giraudel
///
/// @access public
///
/// @param {Length} $width - Element's `width`
/// @param {Length} $height ($width) - Element's `height`
///
/// @example scss - Usage
///   .foo {
///     @include size(10em);
///   }
///
///   .bar {
///     @include size(100%, 10em);
///   }
///
/// @example css - CSS output
///   .foo {
///     width: 10em;
///     height: 10em;
///   }
///
///   .bar {
///     width: 100%;
///     height: 10em;
///   }
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

/// Flexbox absolute centering (apply this class on the parent element of your targeted children)
///
/// @author Louis Chenais
///
/// @access public
///
/// @example scss - Usage
///   .foo {
///     @include flex-absolute-center();
///   }
///
/// @example css - CSS output
///   .foo {
///     display: flex;
///     align-items: center;
///     justify-content: center;
///   }
@mixin flex-absolute-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin transition($selectors: all) {
  transition-property: $selectors;
  transition-timing-function: cubic-bezier(0.22, 0.61, 0.36, 1);
  transition-duration: 300ms;
}